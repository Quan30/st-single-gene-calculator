[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "perturbo"
version = "0.0.1"
description = "Estimating perturbation effects on single cell phenotypes using variational inference."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = { file = "LICENSE" }
authors = [{ name = "Logan Blaine" }]
maintainers = [{ name = "Logan Blaine", email = "loganblaine@g.harvard.edu" }]
dependencies = [
    "anndata>=0.10.9",
    "scvi-tools>=1.1.2",
    "torch>=1.11.0",
    "pyro-ppl>=1.8.6",
    "mudata>=0.3.1",
    "pandas>=1.5.3",
    "scipy>=1.11.4",
    "matplotlib",
    "numpy",
    "seaborn",
    "statsmodels",
    # for debug logging (referenced from the issue template)
    "session-info",
]

optional-dependencies.dev = ["pre-commit", "twine>=4.0.2"]

optional-dependencies.doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "ipykernel",
    "ipython",
    "myst-nb>=1.1",
    "pandas",
    # Until pybtex >0.23.0 releases: https://bitbucket.org/pybtex-devs/pybtex/issues/169/
    "setuptools",
    "sphinx>=4",
    "sphinx-autodoc-typehints",
    "sphinx-book-theme>=1",
    "sphinx-copybutton",
    "sphinx-tabs",
    "sphinxcontrib-bibtex>=1",
    "sphinxext-opengraph",
]

optional-dependencies.test = ["pytest", "coverage"]

# https://docs.pypi.org/project_metadata/#project-urls
urls.Documentation = "https://PerTurbo.readthedocs.io/"
urls.Homepage = "https://github.com/pinellolab/PerTurbo"
urls.Source = "https://github.com/pinellolab/PerTurbo"

[tool.hatch.envs.default]
installer = "uv"
features = ["dev"]

[tool.hatch.envs.docs]
extra-features = ["doc"]
scripts.build = "sphinx-build -M html docs docs/_build {args}"
scripts.open = "python -m webbrowser -t docs/_build/html/index.html"
scripts.clean = "git clean -fdX -- {args:docs}"

[tool.hatch.envs.hatch-test]
features = ["test"]


[tool.black]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
src = ["src"]
line-length = 120
lint.select = [
    "B",      # flake8-bugbear
    "BLE",    # flake8-blind-except
    "C4",     # flake8-comprehensions
    "D",      # pydocstyle
    "E",      # Error detected by Pycodestyle
    "F",      # Errors detected by Pyflakes
    "I",      # isort
    "RUF100", # Report unused noqa directives
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
    "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
    "D107", # Missing docstring in __init__
    # Disable one in each pair of mutually incompatible rules
    "D203", # We don’t want a blank line before a class docstring
    "D213", # <> We want docstrings to start immediately after the opening triple quote
    "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
    "D401", # First line should be in imperative mood; try rephrasing
    "E501", # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E731", # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E741", # allow I, O, l as variable names -> I is the identity matrix
]

lint.per-file-ignores."*/__init__.py" = ["F401"]
lint.per-file-ignores."docs/*" = ["I"]
lint.per-file-ignores."tests/*" = ["D"]
lint.pydocstyle.convention = "numpy"

extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb",
]

[tool.coverage.run]
source = ["perturbo"]
omit = ["**/test_*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib", # allow using test files with same name
]
